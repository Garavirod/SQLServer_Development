-------------------------
--Creation of database---
-------------------------
CREATE DATABASE Academy;
GO

--Using data base Academy
USE Academy;
GO

------------------
--Countries Table-
------------------

/*
	Restrictions:
	Restriction of null
	Restrictio of cheking values
	Rstriction of uniqueness
*/

CREATE TABLE Countries(
	cod_country CHAR(2) NOT NULL,
	Nam VARCHAR(30) NOT NULL,
	Code_ISO3 CHAR(3) NOT NULL,
	Code_tel SMALLINT	 
)
GO

--Adding restrictions to Countries Table
ALTER TABLE Countries ADD PRIMARY KEY(cod_country);
ALTER TABLE Countries ADD CONSTRAINT CK_Code_country CHECK(LEN(Code_ISO3)=3);
ALTER TABLE Countries ADD CONSTRAINT CK_Code_ISO CHECK (LEN(Code_ISO3)=3);
GO
-----------------
--States Table---
-----------------
CREATE TABLE States (
	Code_St CHAR(2) NOT NULL,
	Nam VARCHAR(50) NOT NULL,
	cod_country CHAR(2) NOT NULL,
	Code_Tel SMALLINT
)
GO

--Adding restriction to Countries Table
ALTER TABLE States ADD PRIMARY KEY(Code_St);
ALTER TABLE States ADD CONSTRAINT CK_Cod_state CHECK(LEN(Code_St)=2);
/*
  Beacsue table already exists we can check that existing records
  comply with the rules imposed by the relationship.
  If there's a record which doesn't cumply with this foreign key then this FK can't
  be created.

  (WITH)
*/
ALTER TABLE States WITH CHECK ADD FOREIGN KEY (cod_country) 
	REFERENCES Countries (cod_country)
	ON UPDATE CASCADE 
	ON DELETE CASCADE;

-----------------
--Academy Table--
-----------------

CREATE TABLE Academies (
	code_Ac tinyint IDENTITY (1,1) PRIMARY KEY, --Field autogenerated and autoincremental (IDENTITY)
	Nam VARCHAR(30) NOT NULL,
	Date_Func DATE NOT NULL,
	Num VARCHAR(10) NOT NULL,
	Street VARCHAR(30) NOT NULL,
	City VARCHAR(30) NOT NULL,
	Sta CHAR(2) NOT NULL
	--Adding constraint to Sta atribute
		CONSTRAINT FK_state 
		FOREIGN KEY 
		REFERENCES States (Code_St)
		ON UPDATE CASCADE
		ON DELETE SET NULL, --Put NULL when the record has been deleted
	Zip VARCHAR(10) 
)
GO